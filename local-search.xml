<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Vacation Plan</title>
    <link href="/2022/11/29/Vacation-Plan/"/>
    <url>/2022/11/29/Vacation-Plan/</url>
    
    <content type="html"><![CDATA[<h2 id="作业"><a href="#作业" class="headerlink" title="作业"></a>作业</h2><p>Java大作业</p><p>算法大作业</p><p>云计算大作业</p><p>金融战略大作业</p><p>素质教育论文</p><p>python大作业</p><p>综合实践</p><h2 id="实习"><a href="#实习" class="headerlink" title="实习"></a>实习</h2><ul><li>八股文：计算机网络、操作系统、数据结构、Java八股</li><li>数据库：MySql、Redis</li><li>算法：力扣200左右</li><li>项目：至少一个相关项目</li><li>简历、实习信息</li></ul><h2 id="生活"><a href="#生活" class="headerlink" title="生活"></a>生活</h2><p>学点做饭技能</p><p>健身减肥</p><p>打打台球</p>]]></content>
    
    
    <categories>
      
      <category>计划</category>
      
    </categories>
    
    
    <tags>
      
      <tag>计划</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Github action构建</title>
    <link href="/2022/11/12/Github-action%E6%9E%84%E5%BB%BA/"/>
    <url>/2022/11/12/Github-action%E6%9E%84%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<p><a href="https://andornot.xyz/posts/github-action-deploy-hugo/">使用 GitHub Actions 自动构建部署 Hugo 静态页面 (andornot.xyz)</a></p>]]></content>
    
    
    <categories>
      
      <category>工具</category>
      
    </categories>
    
    
    <tags>
      
      <tag>github</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>服务器基本环境配置</title>
    <link href="/2022/11/07/%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%9F%BA%E6%9C%AC%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    <url>/2022/11/07/%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%9F%BA%E6%9C%AC%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h2 id="源"><a href="#源" class="headerlink" title="源"></a>源</h2><blockquote><p>python 源</p><p>系统源、apt更新、wget</p><p>docker 换源</p><p>代理：proxychains</p></blockquote><h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><blockquote><p>tmux <a href="https://github.com/gpakosz/.tmux">https://github.com/gpakosz/.tmux</a></p><p>warp</p></blockquote><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><blockquote><p>openssh</p><p>ssh免密登录 <a href="https://segmentfault.com/a/1190000040853097">https://segmentfault.com/a/1190000040853097</a></p><p>git</p><p>nginx</p></blockquote><h2 id="Tip"><a href="#Tip" class="headerlink" title="Tip"></a>Tip</h2><blockquote><ul><li>东西别放root目录下，老有坑</li></ul></blockquote><h2 id="踩坑记"><a href="#踩坑记" class="headerlink" title="踩坑记"></a>踩坑记</h2><h3 id="配置免密登录"><a href="#配置免密登录" class="headerlink" title="配置免密登录"></a>配置免密登录</h3><p>配置vscode ssh免密登录的时候按照配置死活不行。</p><p><strong>不知道是不是这个问题？？</strong></p><ul><li>之后把known_host文件删了（不知道是不是这个起了效果，别的步骤都反复做了无数遍都不行，包括把known_host文件删光）</li><li>在服务器端也执行了ssh-keygen</li></ul><p><strong>以下步骤是正常步骤</strong></p><p>在windows端（客户端）新生成公钥</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh-keygen -t rsa<br></code></pre></td></tr></table></figure><p>修改属性</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo <span class="hljs-built_in">chmod</span> 600 authorized_keys<br>sudo <span class="hljs-built_in">chmod</span> 700 ~/.ssh<br></code></pre></td></tr></table></figure><p>把公钥id_rsa.pub上传到服务器的 ~&#x2F;.ssh&#x2F;authorized_keys</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs applescript">在git bash终端 使用命令ssh-<span class="hljs-keyword">copy</span>-<span class="hljs-built_in">id</span> root@ip即可<br>或者手动复制<br></code></pre></td></tr></table></figure><p>修改&#x2F;etc&#x2F;ssh&#x2F;sshd_config配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo vim /etc/ssh/sshd_config<br><br><span class="hljs-comment">#添加</span><br>RSAAuthentication <span class="hljs-built_in">yes</span><br>PubkeyAuthentication <span class="hljs-built_in">yes</span><br></code></pre></td></tr></table></figure><p>重启ssh</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo service sshd restart<br></code></pre></td></tr></table></figure><p>然后在vscode中连接，第一次登录输个密码之后应该就🆗了。</p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>项目部署文档</title>
    <link href="/2022/11/05/%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E6%96%87%E6%A1%A3/"/>
    <url>/2022/11/05/%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E6%96%87%E6%A1%A3/</url>
    
    <content type="html"><![CDATA[<p><strong>Anaconda源</strong> <a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/Anaconda3-5.1.0-Linux-x86_64.sh">https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/Anaconda3-5.1.0-Linux-x86_64.sh</a></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">wget https:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/anaconda/</span>archive/Anaconda3-<span class="hljs-number">5.1</span>.<span class="hljs-number">0</span>-Linux-x86_64.sh<br>bash Ana...<br></code></pre></td></tr></table></figure><h3 id="换源"><a href="#换源" class="headerlink" title="换源"></a>换源</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#命令行换源</span><br><span class="hljs-comment">#清华源</span><br>conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/<br>conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main<br>conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/r<br>conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/msys2<br>conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge<br>conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/msys2 <br>conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/bioconda<br>conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/menpo<br>conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/pytorch<br>conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/simpleitk<br><br><span class="hljs-comment">#科大源</span><br>conda config --add channels https://mirrors.ustc.edu.cn/anaconda/pkgs/main/<br>conda config --add channels https://mirrors.ustc.edu.cn/anaconda/pkgs/free/<br>conda config --add channels https://mirrors.ustc.edu.cn/anaconda/cloud/conda-forge/<br>conda config --add channels https://mirrors.ustc.edu.cn/anaconda/cloud/msys2/<br>conda config --add channels https://mirrors.ustc.edu.cn/anaconda/cloud/bioconda/<br>conda config --add channels https://mirrors.ustc.edu.cn/anaconda/cloud/menpo/<br>conda config --add channels https://mirrors.ustc.edu.cn/anaconda/cloud/pytorch/<br><br><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda config --<span class="hljs-built_in">set</span> show_channel_urls <span class="hljs-built_in">yes</span><br>conda info<br><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 源文件</span><br>vi ~/.condarc<br><br>channels:<br>  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/simpleitk<br>  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/pytorch<br>  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/menpo<br>  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/bioconda<br>  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/msys2<br>  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge<br>  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/msys2<br>  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/r<br>  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main<br>  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/<br>  - defaults<br>show_channel_urls: <span class="hljs-literal">true</span><br>ssl_verify: <span class="hljs-literal">false</span><br><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">pip install -r requirements.txt<br>conda install --<span class="hljs-built_in">yes</span> --file requirements.txt<br><br></code></pre></td></tr></table></figure><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">apt-get <span class="hljs-keyword">install </span><span class="hljs-keyword">build-essential </span>python3-dev<br>sudo pip <span class="hljs-keyword">install </span>uwsgi<br></code></pre></td></tr></table></figure><p><strong>minio</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget https://dl.min.io/server/minio/release/linux-amd64/minio<br><span class="hljs-built_in">chmod</span> +x minio<br><span class="hljs-comment"># 设置密钥</span><br><span class="hljs-built_in">export</span> MINIO_ACCESS_KEY=minioadmin<br><span class="hljs-built_in">export</span> MINIO_SECRET_KEY=minioadmin<br><span class="hljs-comment"># 启动</span><br>./minio server /app/minio/data<br><span class="hljs-comment"># 后台启动</span><br><span class="hljs-built_in">nohup</span> /app/minio/minio server /app/minio/data &gt; /app/minio/log/minio.log 2&gt;&amp;1 &amp;<br><span class="hljs-comment"># 查看进程</span><br>ps -ef |grep minio<br><span class="hljs-comment"># 杀进程</span><br><span class="hljs-built_in">kill</span> -9 pid<br></code></pre></td></tr></table></figure><h2 id="坑"><a href="#坑" class="headerlink" title="坑"></a>坑</h2><h3 id="mysqlclient"><a href="#mysqlclient" class="headerlink" title="mysqlclient"></a>mysqlclient</h3><p>mysqlclient安装 <a href="https://askubuntu.com/questions/1243444/error-installing-libmysqlclient-dev-on-ubuntu-20-04">python - Error installing libmysqlclient-dev on Ubuntu 20.04 - Ask Ubuntu</a></p><blockquote><p>Ubuntu20.04安装mysqlclient</p><p><strong>Step 0:</strong> <code>sudo apt install python3-dev build-essential</code></p><p><strong>Step 1:</strong> <code>sudo apt install libssl1.1</code></p><p><strong>Step 2:</strong> <code>sudo apt install libssl1.1=1.1.1f-1ubuntu2</code></p><p><strong>Step 3:</strong> <code>sudo apt install libssl-dev</code></p><p><strong>Step 4:</strong> <code>sudo apt install libmysqlclient-dev</code></p><p><strong>Step 5:</strong> <code>pip3 install mysqlclient</code></p></blockquote><h3 id="mysql-8"><a href="#mysql-8" class="headerlink" title="mysql 8"></a>mysql 8</h3><p><a href="https://blog.csdn.net/qq_19175749/article/details/121640327">(15条消息) ubuntu mysql8重置密码方法_三、缺的博客-CSDN博客</a></p><p><a href="https://www.cnblogs.com/Extnet/p/10044559.html">mysql8踩坑记录</a></p>]]></content>
    
    
    <categories>
      
      <category>项目</category>
      
    </categories>
    
    
    <tags>
      
      <tag>项目</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>主流的静态文档生成器</title>
    <link href="/2022/11/01/%E4%B8%BB%E6%B5%81%E7%9A%84%E9%9D%99%E6%80%81%E6%96%87%E6%A1%A3%E7%94%9F%E6%88%90%E5%99%A8/"/>
    <url>/2022/11/01/%E4%B8%BB%E6%B5%81%E7%9A%84%E9%9D%99%E6%80%81%E6%96%87%E6%A1%A3%E7%94%9F%E6%88%90%E5%99%A8/</url>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>今天在看halo主题博客时发现它的文档风格还挺不错的，是用Docusaurus生成的。对于喜欢用各种静态页面生成器搞知识笔记的我，觉得还是不错的。然后就看了下它对比<del>（拉踩）</del>里面各种静态页面生成方案。就简单做个搬运总结。</p><p><a href="https://docusaurus.io/zh-CN/docs#gatsby">介绍 | Docusaurus</a></p><h3 id="Gatsby"><a href="#Gatsby" class="headerlink" title="Gatsby"></a>Gatsby</h3><p><a href="https://www.gatsbyjs.com/">Gatsby</a> 自带诸多功能，而且拥有丰富的插件生态，足以胜任 Docusaurus 的所有功能。 当然，这带来了较陡的学习曲线。 Gatsby 在许多方面做得都很出色，适合构建许多类型的网站。 另一方面，Docusaurus 力图将一件事做到尽善尽美——成为最好的内容撰写与发布工具。</p><p>GraphQL 是 Gatsby 的核心，但搭建 Gatsby 网站不一定要用到它。 而在大多数静态网站中，你更不需要 GraphQL 所提供的灵活性。</p><p>Docusaurus 2 的许多方面都被 Gatsby 的出色之处所启发，这是一个优秀的替代品。</p><p><a href="https://github.com/pedronauck/docz">Docz</a> 是一个 Gatsby 主题，用于搭建文档网站。 它的功能与 Docusaurus 相比要匮乏。</p><h3 id="Next-js"><a href="#Next-js" class="headerlink" title="Next.js"></a>Next.js</h3><p><a href="https://nextjs.org/">Next.js</a> 是另一款极为热门的 React 混合框架。 它可以帮助你构建出色的文档网站，但它并不着重于文档功能本身，而且需要你手动实现 Docusaurus 所自带的功能。</p><p><a href="https://github.com/shuding/nextra">Nextra</a> 是一款基于 Next.js 的静态站点生成器。 它的功能与 Docusaurus 相比要匮乏。</p><h3 id="VuePress"><a href="#VuePress" class="headerlink" title="VuePress"></a>VuePress</h3><p><a href="https://vuepress.vuejs.org/">VuePress</a> 与 Docusaurus 有许多共同点——都非常专注于以内容为中心的网站，且都提供量身定制的文档特性。 但是，VuePress 是 Vue 驱动的，而 Docusaurus 则是 React 驱动的。 如果你想要一个基于 Vue 的解决方案，VuePress 是个不错的选择。</p><h3 id="MkDocs"><a href="#MkDocs" class="headerlink" title="MkDocs"></a>MkDocs</h3><p><a href="https://www.mkdocs.org/">MkDocs</a> 是一款受欢迎的 Python 静态站点生成器，其设计理念与 Docusaurus 类似。</p><p>如果你不需要单页应用，也不打算利用 React 的话，这是个好选择。</p><p><a href="https://squidfunk.github.io/mkdocs-material/">Material for MkDocs</a> 是一款很好看的主题。</p><h3 id="Docsify"><a href="#Docsify" class="headerlink" title="Docsify"></a>Docsify</h3><p><a href="https://docsify.js.org/">Docsify</a> 让你能轻松创建文档网站，但它并不是一款静态网站生成器，而且对搜索引擎不太友好。</p><h3 id="GitBook"><a href="#GitBook" class="headerlink" title="GitBook"></a>GitBook</h3><p><a href="https://www.gitbook.com/">GitBook</a> 的设计清爽，诸多开源项目都在使用。 但随着它把重点逐渐从开源工具转向商业产品，它不再符合开源项目文档网站的需要。 结果就是，许多项目转用了其他产品。 你也许在<a href="https://github.com/reduxjs/redux/issues/3161">这里</a>听说过 Redux 转投 Docusaurus 怀抱的事情。</p><p>目前，GitBook 只对开源和非营利团队免费。 Docusaurus 则对所有人免费。</p><h3 id="Jekyll"><a href="#Jekyll" class="headerlink" title="Jekyll"></a>Jekyll</h3><p>在市面上的静态网站生成器中，<a href="https://github.com/jekyll/jekyll">Jekyll</a> 是最成熟而优秀的之一——实际上，在 Docusaurus 诞生之前，Facebook 的绝大多数开源站点都是用 Jekyll 构建的！ 它的上手难度极低。 在静态网站构建方面，我们想要为你带来和 Jekyll 类似的开发者体验。</p><p>相比于静态生成 HTML，再通过 <code>&lt;script /&gt;</code> 标签实现交互，Docusaurus 网站本身就是一个 React 应用。 我们希望借由现代化 JavaScript 生态系统工具，在文档站点性能、资源构建系统，优化和易部署性等领域制定新标准。</p>]]></content>
    
    
    <categories>
      
      <category>工具</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工具</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>跳过google人机验证</title>
    <link href="/2022/11/01/%E8%B7%B3%E8%BF%87google%E4%BA%BA%E6%9C%BA%E9%AA%8C%E8%AF%81/"/>
    <url>/2022/11/01/%E8%B7%B3%E8%BF%87google%E4%BA%BA%E6%9C%BA%E9%AA%8C%E8%AF%81/</url>
    
    <content type="html"><![CDATA[<p><a href="https://blog.azurezeng.com/recaptcha-use-in-china/comment-page-5/">https://blog.azurezeng.com/recaptcha-use-in-china/comment-page-5/</a></p>]]></content>
    
    
    <categories>
      
      <category>工具</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工具</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>周报</title>
    <link href="/2022/10/27/%E5%91%A8%E6%8A%A5/"/>
    <url>/2022/10/27/%E5%91%A8%E6%8A%A5/</url>
    
    <content type="html"><![CDATA[<h2 id="Why"><a href="#Why" class="headerlink" title="Why"></a>Why</h2><p>来软微两个月了，发现比在北邮的时候还摆。什么事都没干成，博客估计也就写写周报总结之类的督促自己了。</p>]]></content>
    
    
    <categories>
      
      <category>周报</category>
      
    </categories>
    
    
    <tags>
      
      <tag>周报</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2022/10/26/hello-world/"/>
    <url>/2022/10/26/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>自定义Pages</title>
    <link href="/2022/10/26/%E8%87%AA%E5%AE%9A%E4%B9%89Pages/"/>
    <url>/2022/10/26/%E8%87%AA%E5%AE%9A%E4%B9%89Pages/</url>
    
    <content type="html"><![CDATA[<p><a href="https://zhuanlan.zhihu.com/p/383582472">Mkdocs 配置和使用 - 知乎 (zhihu.com)</a></p><p><a href="https://sinoui.github.io/sinoui-guide/">sinoui开发指南 · 基于React和sinoui的应用开发指南</a></p><p><a href="https://blog.csdn.net/dangfulin/article/details/121502419">(15条消息) Git &amp; GitHub ——3：Git 分支及其操作_dangfulin的博客-CSDN博客</a></p><p>使用mkdocs中的gh-deploy以及hexo g -d后CNAME消失</p><blockquote><p>应该把CNAME文件放入resource文件夹，即md博文所在文件夹</p></blockquote>]]></content>
    
    
    
    <tags>
      
      <tag>blog</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>OhMyPlugin</title>
    <link href="/2022/10/26/OhMyPlugin/"/>
    <url>/2022/10/26/OhMyPlugin/</url>
    
    <content type="html"><![CDATA[<h2 id="Github插件"><a href="#Github插件" class="headerlink" title="Github插件"></a>Github插件</h2><p><strong>阅读代码：</strong></p><ul><li><p>SourceGraph</p></li><li><p>tree code </p></li><li><p>使用github1s.无需插件直接跳转</p></li></ul><p><strong>下载：</strong></p><p>gitzip</p>]]></content>
    
    
    
    <tags>
      
      <tag>github</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>博客配置</title>
    <link href="/2022/10/26/%E5%8D%9A%E5%AE%A2%E9%85%8D%E7%BD%AE/"/>
    <url>/2022/10/26/%E5%8D%9A%E5%AE%A2%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><h3 id="Hexo-Admin插件"><a href="#Hexo-Admin插件" class="headerlink" title="Hexo-Admin插件"></a>Hexo-Admin插件</h3><p><a href="https://blog.csdn.net/qq_46106285/article/details/106498979">https://blog.csdn.net/qq_46106285/article/details/106498979</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install --save hexo-admin -y<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;hexo clean &amp;&amp; hexo g -d&quot;</span>&gt;hexo-deploy.bat<br><span class="hljs-built_in">echo</span> admin:&gt;&gt;<span class="hljs-string">&quot;_config.yml&quot;</span><br><span class="hljs-built_in">echo</span> deployCommand: <span class="hljs-string">&#x27;hexo-deploy.bat&#x27;</span>&gt;&gt;<span class="hljs-string">&quot;_config.yml&quot;</span><br>hexo server -d<br></code></pre></td></tr></table></figure><p>在浏览器打开localhost:4000&#x2F;admin&#x2F;，即可编辑博文。</p><p>在网页中编辑完，直接左上角Deploy，直接点deploy按钮，就可以完成博客的部署。</p><p>可能遇到的问题(每次都要输入密码)：查看一下你的_config.yml，将文档最后的deploy的repo从http改为git@github类型。</p><p>用hexo-admin插入图片<br>复制图片，粘贴到编辑页面。出现大概这样的东西：<br><img src="/%5Cimages%5Cpasted-2.png%5C" alt="upload successful"></p><p>然后改成：<br><img src="/images/pasted-2.png" alt="upload successful"><br>把你这个图片放到images文件夹内，再改名为pasted-2.png，就出图片了。</p>]]></content>
    
    
    
    <tags>
      
      <tag>blog</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
